/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author oliva
 */

import java.sql.*;
import javax.swing.*;
import java.awt.event.ActionEvent;
import java.io.*;
import java.text.SimpleDateFormat;


import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

import javax.swing.Action;
import javax.swing.AbstractAction;

public class SRS extends javax.swing.JFrame {

    private javax.swing.Timer time = new javax.swing.Timer(1000, displayTime());
    private java.util.Date now;
    private Connection con = null;
    private Statement stmt = null;
    private ResultSet rs = null;

    /**
     * Creates new form SRS
     */
    public SRS() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        addRecordButton = new javax.swing.JButton();
        viewRecordButton = new javax.swing.JButton();
        deleteRecordButton = new javax.swing.JButton();
        updateRecordButton = new javax.swing.JButton();
        loginButton = new javax.swing.JButton();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jLabel20 = new javax.swing.JLabel();
        addRecordInternalFrame = new javax.swing.JInternalFrame();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        studNoTextField = new javax.swing.JTextField();
        lastNameTextField = new javax.swing.JTextField();
        firstNameTextField = new javax.swing.JTextField();
        miTextField = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();
        cancelAddRecordButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        monthComboBox = new javax.swing.JComboBox<>();
        dayComboBox = new javax.swing.JComboBox<>();
        yearComboBox = new javax.swing.JComboBox<>();
        viewRecordInternalFrame = new javax.swing.JInternalFrame();
        jScrollPane1 = new javax.swing.JScrollPane();
        viewRecordTable = new javax.swing.JTable();
        viewRecordCloseButton = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        viewRecordSearchTextField = new javax.swing.JTextField();
        printButton = new javax.swing.JButton();
        updateRecordInternalFrame = new javax.swing.JInternalFrame();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        updateSNoTextField = new javax.swing.JTextField();
        updateLNameTextField = new javax.swing.JTextField();
        updateFNameTextField = new javax.swing.JTextField();
        updateMITextField = new javax.swing.JTextField();
        updateMoComboBox = new javax.swing.JComboBox<>();
        updateDayComboBox = new javax.swing.JComboBox<>();
        updateYearComboBox = new javax.swing.JComboBox<>();
        updateSaveButton = new javax.swing.JButton();
        updateCancelButton = new javax.swing.JButton();
        loginInternalFrame = new javax.swing.JInternalFrame();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        username = new javax.swing.JTextField();
        okLoginButton = new javax.swing.JButton();
        cancelLoginButton = new javax.swing.JButton();
        password = new javax.swing.JPasswordField();
        deleteRecordInternalFrame = new javax.swing.JInternalFrame();
        jScrollPane2 = new javax.swing.JScrollPane();
        deleteRecordTable = new javax.swing.JTable();
        deleteButton = new javax.swing.JButton();
        deleteRecordCloseButton = new javax.swing.JButton();
        aboutInternalFrame = new javax.swing.JInternalFrame();
        updateversionButton = new javax.swing.JButton();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        creditsInternalFrame = new javax.swing.JInternalFrame();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        optionsInternalFrame = new javax.swing.JInternalFrame();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jDesktopPane2 = new javax.swing.JDesktopPane();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        hostTextField = new javax.swing.JTextField();
        portTextField = new javax.swing.JTextField();
        databaseTextField = new javax.swing.JTextField();
        usernameTextField = new javax.swing.JTextField();
        setConButton = new javax.swing.JButton();
        optionCancelButton = new javax.swing.JButton();
        passwordField = new javax.swing.JPasswordField();
        jPanel1 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        timeLabel = new javax.swing.JLabel();
        dateLabel = new javax.swing.JLabel();
        statusLabel = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        actionsMenu = new javax.swing.JMenu();
        addRecordMenuItem = new javax.swing.JMenuItem();
        viewRecordMenuItem = new javax.swing.JMenuItem();
        deleteRecordMenuItem = new javax.swing.JMenuItem();
        updateRecordMenuItem = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        loginMenuItem = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        exitMenuItem = new javax.swing.JMenuItem();
        settingsMenu = new javax.swing.JMenu();
        optionsMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        aboutMenuItem = new javax.swing.JMenuItem();
        creditMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Kyoto University");
        setBackground(new java.awt.Color(153, 153, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMinimumSize(new java.awt.Dimension(740, 560));
        setPreferredSize(new java.awt.Dimension(740, 560));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jToolBar1.setBorder(null);
        jToolBar1.setRollover(true);

        addRecordButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Add Record.png"))); // NOI18N
        addRecordButton.setFocusable(false);
        addRecordButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        addRecordButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        addRecordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRecordButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(addRecordButton);

        viewRecordButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/View Record.png"))); // NOI18N
        viewRecordButton.setFocusable(false);
        viewRecordButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        viewRecordButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        viewRecordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewRecordButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(viewRecordButton);

        deleteRecordButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Delete Record.png"))); // NOI18N
        deleteRecordButton.setFocusable(false);
        deleteRecordButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        deleteRecordButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        deleteRecordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteRecordButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(deleteRecordButton);

        updateRecordButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Update Record.png"))); // NOI18N
        updateRecordButton.setFocusable(false);
        updateRecordButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        updateRecordButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        updateRecordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateRecordButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(updateRecordButton);

        loginButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Login.png"))); // NOI18N
        loginButton.setFocusable(false);
        loginButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        loginButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(loginButton);

        getContentPane().add(jToolBar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 200, 37));

        jDesktopPane1.setBackground(new java.awt.Color(72, 64, 204));
        jDesktopPane1.setPreferredSize(new java.awt.Dimension(780, 470));

        jLabel20.setBackground(new java.awt.Color(60, 72, 204));
        jLabel20.setForeground(new java.awt.Color(60, 72, 204));
        jDesktopPane1.add(jLabel20);
        jLabel20.setBounds(30, 20, 0, 0);

        addRecordInternalFrame.setBackground(new java.awt.Color(0, 0, 153));
        addRecordInternalFrame.setClosable(true);
        addRecordInternalFrame.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        addRecordInternalFrame.setIconifiable(true);
        addRecordInternalFrame.setMaximizable(true);
        addRecordInternalFrame.setTitle("Add Record");
        addRecordInternalFrame.setFrameIcon(null);
        addRecordInternalFrame.setPreferredSize(new java.awt.Dimension(200, 150));
        addRecordInternalFrame.setVisible(false);

        jLabel3.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Student Number");

        jLabel4.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Last Name");

        jLabel5.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("First Name");

        jLabel6.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Middle Initial");

        studNoTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                studNoTextFieldKeyTyped(evt);
            }
        });

        lastNameTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                lastNameTextFieldKeyTyped(evt);
            }
        });

        firstNameTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                firstNameTextFieldKeyTyped(evt);
            }
        });

        miTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                miTextFieldKeyTyped(evt);
            }
        });

        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        cancelAddRecordButton.setText("Cancel");

        jLabel7.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Birthday");

        monthComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));

        dayComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        yearComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", " " }));

        javax.swing.GroupLayout addRecordInternalFrameLayout = new javax.swing.GroupLayout(addRecordInternalFrame.getContentPane());
        addRecordInternalFrame.getContentPane().setLayout(addRecordInternalFrameLayout);
        addRecordInternalFrameLayout.setHorizontalGroup(
            addRecordInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addRecordInternalFrameLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(addRecordInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(addRecordInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(miTextField)
                    .addComponent(firstNameTextField)
                    .addComponent(lastNameTextField)
                    .addComponent(studNoTextField)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addRecordInternalFrameLayout.createSequentialGroup()
                        .addGroup(addRecordInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(addRecordInternalFrameLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(addButton)
                                .addGap(15, 15, 15))
                            .addGroup(addRecordInternalFrameLayout.createSequentialGroup()
                                .addComponent(monthComboBox, 0, 110, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(dayComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(addRecordInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addRecordInternalFrameLayout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(cancelAddRecordButton)
                                .addGap(2, 2, 2))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addRecordInternalFrameLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(yearComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        addRecordInternalFrameLayout.setVerticalGroup(
            addRecordInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addRecordInternalFrameLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(addRecordInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(studNoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addRecordInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(lastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addRecordInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(firstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addRecordInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(miTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addRecordInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(monthComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dayComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yearComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addRecordInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelAddRecordButton)
                    .addComponent(addButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jDesktopPane1.add(addRecordInternalFrame);
        addRecordInternalFrame.setBounds(10, 11, 390, 270);

        viewRecordInternalFrame.setBackground(new java.awt.Color(0, 0, 153));
        viewRecordInternalFrame.setClosable(true);
        viewRecordInternalFrame.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        viewRecordInternalFrame.setIconifiable(true);
        viewRecordInternalFrame.setMaximizable(true);
        viewRecordInternalFrame.setTitle("View Record");
        viewRecordInternalFrame.setFrameIcon(null);
        viewRecordInternalFrame.setMaximumSize(new java.awt.Dimension(10000, 10000));
        viewRecordInternalFrame.setMinimumSize(new java.awt.Dimension(126, 30));
        viewRecordInternalFrame.setName(""); // NOI18N
        viewRecordInternalFrame.setPreferredSize(new java.awt.Dimension(350, 220));
        viewRecordInternalFrame.setVisible(false);
        viewRecordInternalFrame.addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                viewRecordInternalFrameInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        viewRecordTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Student Number", "Last Name", "First Name", "Middle Name", "Birth Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(viewRecordTable);

        viewRecordCloseButton.setText("Close");
        viewRecordCloseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewRecordCloseButtonActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Search");

        viewRecordSearchTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewRecordSearchTextFieldActionPerformed(evt);
            }
        });
        viewRecordSearchTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                viewRecordSearchTextFieldKeyPressed(evt);
            }
        });

        printButton.setText("PRINT");
        printButton.setName(""); // NOI18N
        printButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout viewRecordInternalFrameLayout = new javax.swing.GroupLayout(viewRecordInternalFrame.getContentPane());
        viewRecordInternalFrame.getContentPane().setLayout(viewRecordInternalFrameLayout);
        viewRecordInternalFrameLayout.setHorizontalGroup(
            viewRecordInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewRecordInternalFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(viewRecordInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, viewRecordInternalFrameLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(printButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(viewRecordCloseButton)
                        .addGap(29, 29, 29))
                    .addGroup(viewRecordInternalFrameLayout.createSequentialGroup()
                        .addGroup(viewRecordInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(viewRecordInternalFrameLayout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addGap(18, 18, 18)
                                .addComponent(viewRecordSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        viewRecordInternalFrameLayout.setVerticalGroup(
            viewRecordInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewRecordInternalFrameLayout.createSequentialGroup()
                .addGroup(viewRecordInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(viewRecordInternalFrameLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(viewRecordSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, viewRecordInternalFrameLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel13)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(viewRecordInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewRecordCloseButton)
                    .addComponent(printButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jDesktopPane1.add(viewRecordInternalFrame);
        viewRecordInternalFrame.setBounds(18, 11, 350, 220);
        try {
            viewRecordInternalFrame.setMaximum(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }

        updateRecordInternalFrame.setClosable(true);
        updateRecordInternalFrame.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        updateRecordInternalFrame.setIconifiable(true);
        updateRecordInternalFrame.setMaximizable(true);
        updateRecordInternalFrame.setTitle("Update Record");
        updateRecordInternalFrame.setEnabled(false);
        updateRecordInternalFrame.setFrameIcon(null);
        updateRecordInternalFrame.setPreferredSize(new java.awt.Dimension(300, 200));
        updateRecordInternalFrame.setVisible(false);

        jLabel8.setText("Student Number");

        jLabel9.setText("Last Name");

        jLabel10.setText("First Name");

        jLabel11.setText("Middle Initial");

        jLabel12.setText("Birth Date");

        updateSNoTextField.setToolTipText("");
        updateSNoTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateSNoTextFieldActionPerformed(evt);
            }
        });

        updateLNameTextField.setEnabled(false);

        updateFNameTextField.setEnabled(false);

        updateMITextField.setEnabled(false);

        updateMoComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        updateMoComboBox.setEnabled(false);
        updateMoComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateMoComboBoxActionPerformed(evt);
            }
        });

        updateDayComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        updateDayComboBox.setEnabled(false);

        updateYearComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", " " }));
        updateYearComboBox.setEnabled(false);

        updateSaveButton.setText("Save");
        updateSaveButton.setEnabled(false);
        updateSaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateSaveButtonActionPerformed(evt);
            }
        });

        updateCancelButton.setText("Cancel");
        updateCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateCancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout updateRecordInternalFrameLayout = new javax.swing.GroupLayout(updateRecordInternalFrame.getContentPane());
        updateRecordInternalFrame.getContentPane().setLayout(updateRecordInternalFrameLayout);
        updateRecordInternalFrameLayout.setHorizontalGroup(
            updateRecordInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateRecordInternalFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(updateRecordInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addGap(18, 18, 18)
                .addGroup(updateRecordInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(updateMITextField)
                    .addComponent(updateLNameTextField)
                    .addComponent(updateSNoTextField)
                    .addComponent(updateFNameTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(updateRecordInternalFrameLayout.createSequentialGroup()
                        .addComponent(updateMoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(updateDayComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updateYearComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, updateRecordInternalFrameLayout.createSequentialGroup()
                        .addComponent(updateSaveButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updateCancelButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        updateRecordInternalFrameLayout.setVerticalGroup(
            updateRecordInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateRecordInternalFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(updateRecordInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(updateSNoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(updateRecordInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(updateLNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(updateRecordInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(updateFNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(updateRecordInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(updateMITextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(updateRecordInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(updateRecordInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel12)
                        .addComponent(updateDayComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(updateYearComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(updateMoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(updateRecordInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateSaveButton)
                    .addComponent(updateCancelButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jDesktopPane1.add(updateRecordInternalFrame);
        updateRecordInternalFrame.setBounds(10, 11, 0, 0);
        try {
            updateRecordInternalFrame.setMaximum(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }

        loginInternalFrame.setClosable(true);
        loginInternalFrame.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        loginInternalFrame.setIconifiable(true);
        loginInternalFrame.setMaximizable(true);
        loginInternalFrame.setTitle("Login");
        loginInternalFrame.setFrameIcon(null);
        loginInternalFrame.setMinimumSize(new java.awt.Dimension(250, 250));
        loginInternalFrame.setPreferredSize(new java.awt.Dimension(200, 150));
        loginInternalFrame.setVisible(false);

        jLabel2.setText("Password");

        jLabel1.setText("Username");

        username.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                usernameKeyTyped(evt);
            }
        });

        okLoginButton.setText("OK");
        okLoginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okLoginButtonActionPerformed(evt);
            }
        });

        cancelLoginButton.setText("Cancel");
        cancelLoginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelLoginButtonActionPerformed(evt);
            }
        });

        password.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                passwordKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout loginInternalFrameLayout = new javax.swing.GroupLayout(loginInternalFrame.getContentPane());
        loginInternalFrame.getContentPane().setLayout(loginInternalFrameLayout);
        loginInternalFrameLayout.setHorizontalGroup(
            loginInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginInternalFrameLayout.createSequentialGroup()
                .addGroup(loginInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(loginInternalFrameLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel1)
                        .addGap(16, 16, 16)
                        .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(loginInternalFrameLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(loginInternalFrameLayout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(okLoginButton)
                        .addGap(13, 13, 13)
                        .addComponent(cancelLoginButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        loginInternalFrameLayout.setVerticalGroup(
            loginInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginInternalFrameLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(loginInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(loginInternalFrameLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel1))
                    .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(loginInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(loginInternalFrameLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel2))
                    .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(loginInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(okLoginButton)
                    .addComponent(cancelLoginButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jDesktopPane1.add(loginInternalFrame);
        loginInternalFrame.setBounds(10, 11, 0, 0);
        try {
            loginInternalFrame.setMaximum(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }

        deleteRecordInternalFrame.setBackground(new java.awt.Color(0, 0, 153));
        deleteRecordInternalFrame.setClosable(true);
        deleteRecordInternalFrame.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        deleteRecordInternalFrame.setIconifiable(true);
        deleteRecordInternalFrame.setMaximizable(true);
        deleteRecordInternalFrame.setTitle("Delete Record");
        deleteRecordInternalFrame.setFrameIcon(null);
        deleteRecordInternalFrame.setMinimumSize(new java.awt.Dimension(126, 30));
        deleteRecordInternalFrame.setPreferredSize(new java.awt.Dimension(200, 150));
        deleteRecordInternalFrame.setVisible(false);
        deleteRecordInternalFrame.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        deleteRecordTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Student Number", "Last Name", "First Name", "Middle Initial", "Birth Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        deleteRecordTable.setPreferredSize(new java.awt.Dimension(375, 816));
        jScrollPane2.setViewportView(deleteRecordTable);

        deleteRecordInternalFrame.getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 489, 200));

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        deleteRecordInternalFrame.getContentPane().add(deleteButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 230, 80, -1));

        deleteRecordCloseButton.setText("OK");
        deleteRecordCloseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteRecordCloseButtonActionPerformed(evt);
            }
        });
        deleteRecordInternalFrame.getContentPane().add(deleteRecordCloseButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 230, 80, -1));

        jDesktopPane1.add(deleteRecordInternalFrame);
        deleteRecordInternalFrame.setBounds(18, 11, 0, 0);
        try {
            deleteRecordInternalFrame.setMaximum(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }

        aboutInternalFrame.setClosable(true);
        aboutInternalFrame.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        aboutInternalFrame.setIconifiable(true);
        aboutInternalFrame.setMaximizable(true);
        aboutInternalFrame.setTitle("About");
        aboutInternalFrame.setFrameIcon(null);
        aboutInternalFrame.setPreferredSize(new java.awt.Dimension(200, 150));
        aboutInternalFrame.setVisible(false);

        updateversionButton.setText(" Update Now!");
        updateversionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateversionButtonActionPerformed(evt);
            }
        });

        jLabel31.setText("This Software is used to keep the records of the students of Kyoto University.");

        jLabel32.setText("Do not distribute or make copy of this software.");

        jLabel33.setText("Release Notes for version 0.1.1  beta");

        jLabel34.setText("- You can now Add, Delete, View and Update/Modify Records ");

        jLabel36.setForeground(new java.awt.Color(255, 0, 0));
        jLabel36.setText("Version 0.1.2 beta is now available! Please update now!");

        javax.swing.GroupLayout aboutInternalFrameLayout = new javax.swing.GroupLayout(aboutInternalFrame.getContentPane());
        aboutInternalFrame.getContentPane().setLayout(aboutInternalFrameLayout);
        aboutInternalFrameLayout.setHorizontalGroup(
            aboutInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(aboutInternalFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(aboutInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(aboutInternalFrameLayout.createSequentialGroup()
                        .addGroup(aboutInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel31)
                            .addComponent(jLabel32))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(aboutInternalFrameLayout.createSequentialGroup()
                        .addGroup(aboutInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel33)
                            .addComponent(jLabel34)
                            .addComponent(updateversionButton)
                            .addComponent(jLabel36))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        aboutInternalFrameLayout.setVerticalGroup(
            aboutInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(aboutInternalFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel31)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel32)
                .addGap(18, 18, 18)
                .addComponent(jLabel33)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel34)
                .addGap(33, 33, 33)
                .addComponent(jLabel36)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(updateversionButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jDesktopPane1.add(aboutInternalFrame);
        aboutInternalFrame.setBounds(10, 21, 0, 0);
        try {
            aboutInternalFrame.setMaximum(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        aboutInternalFrame.getAccessibleContext().setAccessibleParent(jDesktopPane1);

        creditsInternalFrame.setBackground(new java.awt.Color(72, 64, 204));
        creditsInternalFrame.setBorder(null);
        creditsInternalFrame.setClosable(true);
        creditsInternalFrame.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        creditsInternalFrame.setIconifiable(true);
        creditsInternalFrame.setTitle("Credits");
        creditsInternalFrame.setFrameIcon(null);
        creditsInternalFrame.setPreferredSize(new java.awt.Dimension(200, 150));
        creditsInternalFrame.setVisible(false);

        jLabel22.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("This Program is developed by: Team Pogi");

        jLabel23.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("James Ryan Armando");

        jLabel24.setBackground(new java.awt.Color(255, 255, 255));
        jLabel24.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("Genesis Eresari");

        jLabel25.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("Julius Mameng");

        jLabel26.setFont(new java.awt.Font("Comic Sans MS", 1, 11)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setText("Jazper Kyle Abogne");

        jLabel27.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 255, 255));
        jLabel27.setText("Bryan Joshua Militante");

        jLabel29.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/TeamPogi Logo.png"))); // NOI18N

        javax.swing.GroupLayout creditsInternalFrameLayout = new javax.swing.GroupLayout(creditsInternalFrame.getContentPane());
        creditsInternalFrame.getContentPane().setLayout(creditsInternalFrameLayout);
        creditsInternalFrameLayout.setHorizontalGroup(
            creditsInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(creditsInternalFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(creditsInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel22)
                    .addGroup(creditsInternalFrameLayout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(creditsInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(creditsInternalFrameLayout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addGroup(creditsInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel24)
                                    .addComponent(jLabel23)
                                    .addComponent(jLabel25)))
                            .addComponent(jLabel26)
                            .addComponent(jLabel27))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel29)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        creditsInternalFrameLayout.setVerticalGroup(
            creditsInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(creditsInternalFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel24)
                .addGroup(creditsInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(creditsInternalFrameLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel25)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel26)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel27)
                        .addContainerGap(245, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, creditsInternalFrameLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel29)
                        .addGap(20, 20, 20))))
        );

        jDesktopPane1.add(creditsInternalFrame);
        creditsInternalFrame.setBounds(10, 21, 0, 0);
        try {
            creditsInternalFrame.setMaximum(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }

        optionsInternalFrame.setClosable(true);
        optionsInternalFrame.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        optionsInternalFrame.setIconifiable(true);
        optionsInternalFrame.setMaximizable(true);
        optionsInternalFrame.setTitle("Options");
        optionsInternalFrame.setFrameIcon(null);
        optionsInternalFrame.setPreferredSize(new java.awt.Dimension(200, 150));
        optionsInternalFrame.setVisible(false);
        optionsInternalFrame.addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                optionsInternalFrameInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                optionsInternalFrameInternalFrameOpened(evt);
            }
        });

        jDesktopPane2.setBackground(new java.awt.Color(0, 0, 102));

        jLabel14.setText("Currently Connected to:");

        jLabel15.setText("Host:");

        jLabel16.setText("Port:");

        jLabel17.setText("Database:");

        jLabel18.setText("Username:");

        jLabel19.setText("Password:");

        setConButton.setText("Set Connection");
        setConButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setConButtonActionPerformed(evt);
            }
        });

        optionCancelButton.setText("Cancel");
        optionCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optionCancelButtonActionPerformed(evt);
            }
        });

        jDesktopPane2.setLayer(jLabel14, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(jLabel15, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(jLabel16, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(jLabel17, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(jLabel18, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(jLabel19, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(hostTextField, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(portTextField, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(databaseTextField, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(usernameTextField, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(setConButton, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(optionCancelButton, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(passwordField, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane2Layout = new javax.swing.GroupLayout(jDesktopPane2);
        jDesktopPane2.setLayout(jDesktopPane2Layout);
        jDesktopPane2Layout.setHorizontalGroup(
            jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane2Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17)
                    .addComponent(jLabel18)
                    .addComponent(jLabel19))
                .addGap(43, 43, 43)
                .addGroup(jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jDesktopPane2Layout.createSequentialGroup()
                        .addComponent(setConButton)
                        .addGap(27, 27, 27)
                        .addComponent(optionCancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(usernameTextField, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(databaseTextField, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(portTextField, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(hostTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE)
                        .addComponent(passwordField)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jDesktopPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14)
                .addGap(35, 35, 35))
        );
        jDesktopPane2Layout.setVerticalGroup(
            jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(hostTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(portTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(databaseTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(usernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(setConButton)
                    .addComponent(optionCancelButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Connections", jDesktopPane2);

        javax.swing.GroupLayout optionsInternalFrameLayout = new javax.swing.GroupLayout(optionsInternalFrame.getContentPane());
        optionsInternalFrame.getContentPane().setLayout(optionsInternalFrameLayout);
        optionsInternalFrameLayout.setHorizontalGroup(
            optionsInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        optionsInternalFrameLayout.setVerticalGroup(
            optionsInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(optionsInternalFrameLayout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jDesktopPane1.setLayer(optionsInternalFrame, javax.swing.JLayeredPane.PALETTE_LAYER);
        jDesktopPane1.add(optionsInternalFrame);
        optionsInternalFrame.setBounds(10, 11, 200, 150);
        try {
            optionsInternalFrame.setMaximum(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }

        jPanel1.setBackground(new java.awt.Color(0, 0, 153));

        jLabel21.setFont(new java.awt.Font("Comic Sans MS", 1, 48)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("KYOTO UNIVERSITY");

        jLabel28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Kyoto University.png"))); // NOI18N

        jLabel30.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/京都大学.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(jLabel28)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel21)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(187, 187, 187)
                        .addComponent(jLabel30)))
                .addContainerGap(58, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel30)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jDesktopPane1.add(jPanel1);
        jPanel1.setBounds(0, 20, 740, 107);

        getContentPane().add(jDesktopPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 37, 740, 450));

        timeLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        getContentPane().add(timeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 0, 130, 40));

        dateLabel.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        getContentPane().add(dateLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 0, 260, 40));
        getContentPane().add(statusLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 480, 200, 30));

        jLabel35.setText("version 0.1.1 beta");
        getContentPane().add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 490, -1, -1));

        jMenuBar1.setBackground(new java.awt.Color(101, 10, 44));
        jMenuBar1.setForeground(new java.awt.Color(204, 204, 204));

        actionsMenu.setForeground(new java.awt.Color(255, 255, 255));
        actionsMenu.setText("Actions");

        addRecordMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        addRecordMenuItem.setBackground(new java.awt.Color(51, 51, 51));
        addRecordMenuItem.setForeground(new java.awt.Color(255, 255, 255));
        addRecordMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Add Record.png"))); // NOI18N
        addRecordMenuItem.setText("Add Record");
        addRecordMenuItem.setBorder(null);
        addRecordMenuItem.setEnabled(false);
        addRecordMenuItem.setName(""); // NOI18N
        addRecordMenuItem.setOpaque(true);
        addRecordMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRecordMenuItemActionPerformed(evt);
            }
        });
        actionsMenu.add(addRecordMenuItem);

        viewRecordMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        viewRecordMenuItem.setBackground(new java.awt.Color(51, 51, 51));
        viewRecordMenuItem.setForeground(new java.awt.Color(255, 255, 255));
        viewRecordMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/View Record White.png"))); // NOI18N
        viewRecordMenuItem.setText("View Record");
        viewRecordMenuItem.setBorder(null);
        viewRecordMenuItem.setOpaque(true);
        viewRecordMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewRecordMenuItemActionPerformed(evt);
            }
        });
        actionsMenu.add(viewRecordMenuItem);

        deleteRecordMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        deleteRecordMenuItem.setBackground(new java.awt.Color(51, 51, 51));
        deleteRecordMenuItem.setForeground(new java.awt.Color(255, 255, 255));
        deleteRecordMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Delete Record.png"))); // NOI18N
        deleteRecordMenuItem.setText("Delete Record");
        deleteRecordMenuItem.setBorder(null);
        deleteRecordMenuItem.setEnabled(false);
        deleteRecordMenuItem.setOpaque(true);
        deleteRecordMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteRecordMenuItemActionPerformed(evt);
            }
        });
        actionsMenu.add(deleteRecordMenuItem);

        updateRecordMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        updateRecordMenuItem.setBackground(new java.awt.Color(51, 51, 51));
        updateRecordMenuItem.setForeground(new java.awt.Color(255, 255, 255));
        updateRecordMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Update Record White.png"))); // NOI18N
        updateRecordMenuItem.setText("Update Record");
        updateRecordMenuItem.setBorder(null);
        updateRecordMenuItem.setEnabled(false);
        updateRecordMenuItem.setOpaque(true);
        updateRecordMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateRecordMenuItemActionPerformed(evt);
            }
        });
        actionsMenu.add(updateRecordMenuItem);
        actionsMenu.add(jSeparator1);

        loginMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        loginMenuItem.setBackground(new java.awt.Color(51, 51, 51));
        loginMenuItem.setForeground(new java.awt.Color(255, 255, 255));
        loginMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Login.png"))); // NOI18N
        loginMenuItem.setText("Login");
        loginMenuItem.setBorder(null);
        loginMenuItem.setOpaque(true);
        loginMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginMenuItemActionPerformed(evt);
            }
        });
        actionsMenu.add(loginMenuItem);
        actionsMenu.add(jSeparator2);

        exitMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.ALT_MASK));
        exitMenuItem.setBackground(new java.awt.Color(51, 51, 51));
        exitMenuItem.setForeground(new java.awt.Color(255, 255, 255));
        exitMenuItem.setText("Exit");
        exitMenuItem.setBorder(null);
        exitMenuItem.setOpaque(true);
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        actionsMenu.add(exitMenuItem);

        jMenuBar1.add(actionsMenu);

        settingsMenu.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        settingsMenu.setForeground(new java.awt.Color(255, 255, 255));
        settingsMenu.setText("Settings");
        settingsMenu.setBorderPainted(true);
        settingsMenu.setContentAreaFilled(false);

        optionsMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        optionsMenuItem.setBackground(new java.awt.Color(51, 51, 51));
        optionsMenuItem.setForeground(new java.awt.Color(255, 255, 255));
        optionsMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Options.png"))); // NOI18N
        optionsMenuItem.setText("Options");
        optionsMenuItem.setBorder(null);
        optionsMenuItem.setContentAreaFilled(false);
        optionsMenuItem.setOpaque(true);
        optionsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optionsMenuItemActionPerformed(evt);
            }
        });
        settingsMenu.add(optionsMenuItem);

        jMenuBar1.add(settingsMenu);

        helpMenu.setBorder(null);
        helpMenu.setForeground(new java.awt.Color(255, 255, 255));
        helpMenu.setText("Help");

        aboutMenuItem.setBackground(new java.awt.Color(51, 51, 51));
        aboutMenuItem.setForeground(new java.awt.Color(255, 255, 255));
        aboutMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/About (white).png"))); // NOI18N
        aboutMenuItem.setText("About");
        aboutMenuItem.setBorder(null);
        aboutMenuItem.setOpaque(true);
        aboutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutMenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(aboutMenuItem);

        creditMenuItem.setBackground(new java.awt.Color(51, 51, 51));
        creditMenuItem.setForeground(new java.awt.Color(255, 255, 255));
        creditMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Credits.png"))); // NOI18N
        creditMenuItem.setText("Credit");
        creditMenuItem.setBorder(null);
        creditMenuItem.setOpaque(true);
        creditMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creditMenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(creditMenuItem);

        jMenuBar1.add(helpMenu);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void optionsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optionsMenuItemActionPerformed
        optionsInternalFrame.setBounds(150, 130, 450, 310);
        optionsInternalFrame.setVisible(true);
        statusLabel.setText("Options");
    }//GEN-LAST:event_optionsMenuItemActionPerformed

    private void aboutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutMenuItemActionPerformed
        aboutInternalFrame.setBounds(150, 130, 450, 310);
        aboutInternalFrame.setVisible(true);
        statusLabel.setText("About");
    }//GEN-LAST:event_aboutMenuItemActionPerformed

    private void addRecordMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRecordMenuItemActionPerformed
        addRecordInternalFrame.setBounds(180, 120, 430, 280);
        addRecordInternalFrame.setVisible(true);
        statusLabel.setText("Add Record");
    }//GEN-LAST:event_addRecordMenuItemActionPerformed

    private void viewRecordMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewRecordMenuItemActionPerformed
        viewRecordInternalFrame.setBounds(130, 120, 530, 325);
        viewRecordInternalFrame.setVisible(true);
         statusLabel.setText("View Record");
    }//GEN-LAST:event_viewRecordMenuItemActionPerformed

    private void deleteRecordMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteRecordMenuItemActionPerformed
        deleteRecordInternalFrame.setBounds(130, 120, 530, 325);
        deleteRecordInternalFrame.setVisible(true);
        statusLabel.setText("Delete Record");
    }//GEN-LAST:event_deleteRecordMenuItemActionPerformed

    private void updateRecordMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateRecordMenuItemActionPerformed
        updateRecordInternalFrame.setBounds(200, 120, 385, 240);
        updateRecordInternalFrame.setVisible(true);
        updateRecordInternalFrame.setResizable(true);
        statusLabel.setText("Update Record");
    }//GEN-LAST:event_updateRecordMenuItemActionPerformed

    private void loginMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginMenuItemActionPerformed
        if (loginMenuItem.getText().equals("Login")) {
            loginInternalFrame.setBounds(200, 130, 280, 150);
            loginInternalFrame.setVisible(true);
        } else {
            addRecordMenuItem.setEnabled(false);
            deleteRecordMenuItem.setEnabled(false);
            updateRecordMenuItem.setEnabled(false);
            addRecordButton.setEnabled(false);
            deleteRecordButton.setEnabled(false);
            updateRecordButton.setEnabled(false);
            loginMenuItem.setText("Login");
            statusLabel.setText("Login");
        }
    }//GEN-LAST:event_loginMenuItemActionPerformed

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

        String buffer;
        String host = "";
        String port = "";
        String database = "";
        String username = "";
        String password = "";
        int comma = 0;
        try {
            BufferedReader in = new BufferedReader(new FileReader("connection.txt"));
            buffer = in.readLine();
            if (buffer != null) {
                for (int i = 0; i < buffer.length(); i++) {
                    if (buffer.charAt(i) == ',') {
                        comma++;
                    }
                    if (buffer.charAt(i) != ',') {
                        if (comma == 0) {
                            host = host + buffer.charAt(i);
                        } else if (comma == 1) {
                            port = port + buffer.charAt(i);
                        } else if (comma == 2) {
                            database = database + buffer.charAt(i);
                        } else if (comma == 3) {
                            username = username + buffer.charAt(i);
                        } else if (comma == 4) {
                            password = password + buffer.charAt(i);
                        }
                    }
                }
            }
            in.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "e");
        }

        try {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            con = DriverManager.getConnection("jdbc:oracle:thin@PC-2-PC:1521:XE", "STUDENT", "aics");
            con = DriverManager.getConnection("jdbc:oracle:thin:@" + host + ":" + port + ":" + database + "",username,  password);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Connection Error");
        }
        time.start();
    }//GEN-LAST:event_formWindowOpened

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        try {
            stmt = con.createStatement();
            stmt.execute("INSERT INTO STUDENTRECORD VALUES('"
                    + studNoTextField.getText() + "','"
                    + lastNameTextField.getText() + "','"
                    + firstNameTextField.getText() + "','"
                    + miTextField.getText() + "','"
                    + monthComboBox.getSelectedItem() + "-"
                    + dayComboBox.getSelectedItem() + "-"
                    + yearComboBox.getSelectedItem() + "')");
            JOptionPane.showMessageDialog(rootPane, "Record Added");
            studNoTextField.setText("");
            lastNameTextField.setText("");
            firstNameTextField.setText("");
            miTextField.setText("");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e);
        }

    }//GEN-LAST:event_addButtonActionPerformed

    private void studNoTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_studNoTextFieldKeyTyped
        int KeyAscii = evt.getKeyChar();
        if (!((KeyAscii >= 47 && KeyAscii <= 57 || KeyAscii == 18
                || KeyAscii >= 65 && KeyAscii <= 90))) {
            evt.consume();
        }
    }//GEN-LAST:event_studNoTextFieldKeyTyped

    private void lastNameTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lastNameTextFieldKeyTyped
        int KeyAscii = evt.getKeyChar();
        if (!((KeyAscii >= 97 && KeyAscii <= 122 || KeyAscii == 18 || KeyAscii == 32
                || KeyAscii >= 65 && KeyAscii <= 90))) {
            evt.consume();
        }
    }//GEN-LAST:event_lastNameTextFieldKeyTyped

    private void firstNameTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_firstNameTextFieldKeyTyped
        int KeyAscii = evt.getKeyChar();
        if (!((KeyAscii >= 97 && KeyAscii <= 122 || KeyAscii == 18 || KeyAscii == 32
                | KeyAscii >= 65 && KeyAscii <= 90))) {
            evt.consume();
        }
    }//GEN-LAST:event_firstNameTextFieldKeyTyped

    private void miTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_miTextFieldKeyTyped
        int KeyAscii = evt.getKeyChar();
        if (!((KeyAscii >= 65 && KeyAscii <= 90 || KeyAscii == 18))) {
            evt.consume();
        }
    }//GEN-LAST:event_miTextFieldKeyTyped

    private void addRecordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRecordButtonActionPerformed
        addRecordInternalFrame.setBounds(180, 120, 430, 280);
        addRecordInternalFrame.setVisible(true);
        statusLabel.setText("Add Record");
    }//GEN-LAST:event_addRecordButtonActionPerformed

    private void viewRecordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewRecordButtonActionPerformed
        viewRecordInternalFrame.setBounds(130, 120, 530, 325);
        viewRecordInternalFrame.setVisible(true);
        statusLabel.setText("View Record");
    }//GEN-LAST:event_viewRecordButtonActionPerformed

    private void deleteRecordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteRecordButtonActionPerformed
        deleteRecordInternalFrame.setBounds(130, 120, 530, 325);
        deleteRecordInternalFrame.setVisible(true);
        statusLabel.setText("Delete Record");
    }//GEN-LAST:event_deleteRecordButtonActionPerformed

    private void updateRecordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateRecordButtonActionPerformed
        updateRecordInternalFrame.setBounds(200, 120, 385, 240);
        updateRecordInternalFrame.setVisible(true);
        statusLabel.setText("Update Record");
    }//GEN-LAST:event_updateRecordButtonActionPerformed

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
       int p = JOptionPane.showConfirmDialog(null, "Logging Out", "YES", JOptionPane.YES_NO_OPTION);
        if (p == 0) {
            System.exit(0);
        }
        statusLabel.setText("Saving....");
    }//GEN-LAST:event_loginButtonActionPerformed

    private void viewRecordInternalFrameInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_viewRecordInternalFrameInternalFrameActivated
        for (int x = 0; x < viewRecordTable.getRowCount(); x++) {
            for (int y = 0; y < viewRecordTable.getColumnCount(); y++) {

            }

        }
        try {
            stmt = con.createStatement();
            rs = stmt.executeQuery("SELECT * FROM STUDENTRECORD");
            int x = 0;
            while (rs.next()) {
                viewRecordTable.setValueAt(rs.getString("StudentNumber"), x, 0);
                viewRecordTable.setValueAt(rs.getString("LastName"), x, 1);
                viewRecordTable.setValueAt(rs.getString("FirstName"), x, 2);
                viewRecordTable.setValueAt(rs.getString("MI"), x, 3);
                viewRecordTable.setValueAt(rs.getString("BIRTHDATE"), x, 4);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Syntax Error");
        }

    }//GEN-LAST:event_viewRecordInternalFrameInternalFrameActivated

    private void viewRecordCloseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewRecordCloseButtonActionPerformed
        viewRecordInternalFrame.setVisible(false);
    }//GEN-LAST:event_viewRecordCloseButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        if (deleteRecordTable.getSelectedRow() != -1) {

            String studentNumber = (String) (deleteRecordTable.getValueAt(deleteRecordTable.getSelectedRow(), 0));

            if (studentNumber == "" || studentNumber == null) {
                JOptionPane.showMessageDialog(rootPane, "No Record to delete");
            } else {

                try {
                    stmt = con.createStatement();
                    stmt.execute("DELETE FROM STUDENTRECORD WHERE STUDENTNUMBER = '" + studentNumber + "'");
                    JOptionPane.showMessageDialog(rootPane, "Record Deleted");

                    for (int x = 0; x < deleteRecordTable.getRowCount(); x++) {
                        for (int y = 0; y < deleteRecordTable.getColumnCount(); y++) {
                            deleteRecordTable.setValueAt("", x, y);
                        }
                    }

                    try {
                        stmt = con.createStatement();
                        rs = stmt.executeQuery("SELECT * FROM STUDENTRECORD");
                        int x = 0;
                        while (rs.next()) {
                            deleteRecordTable.setValueAt(rs.getString("StudentNumber"), x, 0);
                            deleteRecordTable.setValueAt(rs.getString("LastName"), x, 1);
                            deleteRecordTable.setValueAt(rs.getString("FirstName"), x, 2);
                            deleteRecordTable.setValueAt(rs.getString("MI"), x, 3);
                            deleteRecordTable.setValueAt(rs.getString("BIRTHDATE"), x, 4);
                            x++;
                        }
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(rootPane, "Invalid Statement");
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(rootPane, "Invalid Statement");
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Please Select a Record");
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void deleteRecordCloseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteRecordCloseButtonActionPerformed
        deleteRecordInternalFrame.setVisible(false);
    }//GEN-LAST:event_deleteRecordCloseButtonActionPerformed

    private void updateMoComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateMoComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updateMoComboBoxActionPerformed

    private void updateSNoTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateSNoTextFieldActionPerformed
        //clear all field
        updateLNameTextField.setText(null);
        updateFNameTextField.setText(null);
        updateMITextField.setText(null);
        updateMoComboBox.setSelectedIndex(0);
        updateDayComboBox.setSelectedIndex(0);
        updateYearComboBox.setSelectedIndex(0);
        try {
            stmt = con.createStatement();
            rs = stmt.executeQuery("SELECT * FROM STUDENTRECORD WHERE STUDENTNUMBER = '"
                    + updateSNoTextField.getText() + "'");

            if (rs.next()) {
                //
                updateLNameTextField.setEnabled(true);
                updateFNameTextField.setEnabled(true);
                updateMITextField.setEnabled(true);
                updateMoComboBox.setEnabled(true);
                updateYearComboBox.setEnabled(true);
                updateSaveButton.setEnabled(true);

                //Separte
                String[] birthdate = rs.getString("BIRTHDATE").split("-");

                //display
                updateLNameTextField.setText(rs.getString("LASTNAME"));
                updateFNameTextField.setText(rs.getString("FIRSTNAME"));
                updateMITextField.setText(rs.getString("MI"));
                updateMoComboBox.setSelectedItem(birthdate[0]);
                updateDayComboBox.setSelectedItem(birthdate[1]);
                updateYearComboBox.setSelectedItem(birthdate[2]);
            } else {
                JOptionPane.showMessageDialog(rootPane, "Student not exist");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Invalid Statement");
        }
    }//GEN-LAST:event_updateSNoTextFieldActionPerformed

    private void updateSaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateSaveButtonActionPerformed
        try {
            stmt = con.createStatement();
            stmt.execute("UPDATE STUDENTRECORD SET LASTNAME = '" + updateLNameTextField.getText() + "',"
                    + " FIRSTNAME = '" + updateFNameTextField.getText() + "',"
                    + " MI = '" + updateMITextField.getText() + "',"
                    + " BIRTHDATE = '" + updateMoComboBox.getSelectedItem() + "-"
                    + updateDayComboBox.getSelectedItem() + "-"
                    + updateYearComboBox.getSelectedItem() + "-"
                    + " WHERE STUDENTNUMBER = '" + updateSNoTextField.getText() + "'");
            JOptionPane.showMessageDialog(rootPane, "Record updated!");

            updateSNoTextField.setText(null);
            updateLNameTextField.setEnabled(false);
            updateFNameTextField.setEnabled(false);
            updateMITextField.setEnabled(false);
            updateMoComboBox.setEnabled(false);
            updateDayComboBox.setEnabled(false);
            updateYearComboBox.setEnabled(false);
            updateSaveButton.setEnabled(false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "SQL SYNTAX ERROR");
        }
    }//GEN-LAST:event_updateSaveButtonActionPerformed

    private void updateCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateCancelButtonActionPerformed
        updateSNoTextField.setText(null);
        updateLNameTextField.setText(null);
        updateFNameTextField.setText(null);
        updateMITextField.setText(null);
        updateMoComboBox.setSelectedIndex(0);
        updateDayComboBox.setSelectedIndex(0);
        updateYearComboBox.setSelectedIndex(0);

        updateLNameTextField.setEnabled(false);
        updateFNameTextField.setEnabled(false);
        updateMITextField.setEnabled(false);
        updateMoComboBox.setEnabled(false);
        updateDayComboBox.setEnabled(false);
        updateYearComboBox.setEnabled(false);
        updateSaveButton.setEnabled(false);

        updateRecordInternalFrame.setVisible(false);
    }//GEN-LAST:event_updateCancelButtonActionPerformed

    private void viewRecordSearchTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_viewRecordSearchTextFieldKeyPressed
        for (int x = 0; x < viewRecordTable.getRowCount(); x++) {
            for (int y = 0; y < viewRecordTable.getColumnCount(); y++) {
                viewRecordTable.setValueAt("", x, y);
            }
        }

        try {
            stmt = con.createStatement();
            rs = stmt.executeQuery("SELECT * FROM STUDENTRECORD WHERE"
                    + " STUDENTNUMBER LIKE '"
                    + viewRecordSearchTextField.getText() + "%'"
                    + " OR LASTNAME LIKE '"
                    + viewRecordSearchTextField.getText() + "%'"
                    + " OR FIRSTNAME LIKE '"
                    + viewRecordSearchTextField.getText() + "%'"
                    + " OR MI LIKE '"
                    + viewRecordSearchTextField.getText() + "%'"
                    + " OR BIRTHDATE LIKE '"
                    + viewRecordSearchTextField.getText() + "%'");

            int x = 0;
            while (rs.next()) {
                viewRecordTable.setValueAt(rs.getString("StudentNumber"), x, 0);
                viewRecordTable.setValueAt(rs.getString("LastName"), x, 1);
                viewRecordTable.setValueAt(rs.getString("FirstName"), x, 2);
                viewRecordTable.setValueAt(rs.getString("MI"), x, 3);
                viewRecordTable.setValueAt(rs.getString("BIRTHDATE"), x, 4);
                x++;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Syntax Error");

        }
    }//GEN-LAST:event_viewRecordSearchTextFieldKeyPressed

    private void passwordKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordKeyTyped
        int KeyAscii = evt.getKeyChar();
        if (!((KeyAscii >= 97 && KeyAscii <= 122 || KeyAscii == 18 || KeyAscii == 10
                || KeyAscii >= 65 && KeyAscii <= 90 || KeyAscii >= 47 && KeyAscii <= 57))) {
            evt.consume();
        }
    }//GEN-LAST:event_passwordKeyTyped

    private void cancelLoginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelLoginButtonActionPerformed
        loginInternalFrame.setVisible(false);
    }//GEN-LAST:event_cancelLoginButtonActionPerformed

    private void okLoginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okLoginButtonActionPerformed
        try {
            stmt = con.createStatement();
            rs = stmt.executeQuery("SELECT * FROM SECURITY WHERE USERNAME = '" + username.getText() + "'");
            if (rs.next()) {
                if (rs.getString("PASSWORD").equals(password.getText())) {
                    addRecordMenuItem.setEnabled(true);
                    deleteRecordMenuItem.setEnabled(true);
                    updateRecordMenuItem.setEnabled(true);
                    addRecordButton.setEnabled(true);
                    deleteRecordButton.setEnabled(true);
                    updateRecordButton.setEnabled(true);
                    loginInternalFrame.setVisible(false);
                    loginMenuItem.setText("Logout");
                    username.setText("");
                    password.setText("");
                } else {
                    JOptionPane.showMessageDialog(this, "Incorrect Password");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Username does not exist");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_okLoginButtonActionPerformed

    private void usernameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usernameKeyTyped
        int KeyAscii = evt.getKeyChar();
        if (!((KeyAscii >= 97 && KeyAscii <= 122 || KeyAscii == 18 || KeyAscii == 10 || KeyAscii == 45
                || KeyAscii >= 65 && KeyAscii <= 90 || KeyAscii >= 47 && KeyAscii <= 57))) {
            evt.consume();
        }
    }//GEN-LAST:event_usernameKeyTyped

    private void printButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printButtonActionPerformed
        try {
            JasperDesign jd = JRXmlLoader.load("STUDENTRECORD.jrxml");
            JRDesignQuery nq = new JRDesignQuery();
            nq.setText("SELECT * FROM STUDENTRECORD");
            jd.setQuery(nq);
            JasperReport jp = JasperCompileManager.compileReport(jd);
            JasperPrint jprint = JasperFillManager.fillReport(jp, null, con);
            JasperViewer.viewReport(jprint, false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e);
        }
    }//GEN-LAST:event_printButtonActionPerformed

    private void viewRecordSearchTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewRecordSearchTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_viewRecordSearchTextFieldActionPerformed

    private void creditMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creditMenuItemActionPerformed
        creditsInternalFrame.setBounds(200, 120, 385, 240);
        creditsInternalFrame.setVisible(true);
        statusLabel.setText("Cedits");
    }//GEN-LAST:event_creditMenuItemActionPerformed

    private void optionsInternalFrameInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_optionsInternalFrameInternalFrameOpened

        String buffer;
        String host = "";
        String port = "";
        String database = "";
        String username = "";
        String password = "";
        int comma = 0;
        try {
            BufferedReader in = new BufferedReader(new FileReader("connection.txt"));
            buffer = in.readLine();
            if (buffer != null) {
                for (int i = 0; i < buffer.length(); i++) {
                    if (buffer.charAt(i) == ',') {
                        comma++;
                    }
                    if (buffer.charAt(i) != ',') {
                        if (comma == 0) {
                            host = host + buffer.charAt(i);
                        } else if (comma == 1) {
                            port = port + buffer.charAt(i);
                        } else if (comma == 2) {
                            database = database + buffer.charAt(i);
                        } else if (comma == 3) {
                            username = username + buffer.charAt(i);
                        } else if (comma == 4) {
                            password = password + buffer.charAt(i);
                        }
                    }
                }
            }
            hostTextField.setText(host);
            portTextField.setText(port);
            databaseTextField.setText(database);
            usernameTextField.setText(username);
            passwordField.setText(password);
            in.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "e");
        }
    }//GEN-LAST:event_optionsInternalFrameInternalFrameOpened

    private void optionsInternalFrameInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_optionsInternalFrameInternalFrameActivated
        // TODO add your handling code here:
    }//GEN-LAST:event_optionsInternalFrameInternalFrameActivated

    private void optionCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optionCancelButtonActionPerformed
        optionsInternalFrame.setVisible(false);
    }//GEN-LAST:event_optionCancelButtonActionPerformed

    private void setConButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setConButtonActionPerformed

        try {
            PrintWriter out = new PrintWriter(new FileWriter("connection.txt"));
            out.println(hostTextField.getText() + ","
                + portTextField.getText() + ","
                + databaseTextField.getText() + ","
                + usernameTextField.getText() + ","
                + passwordField.getText());
            out.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e);
        }
        try {
            con.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e);
        }
        try {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            con = DriverManager.getConnection("jdbc:oracle:thin:@" + hostTextField.getText() + ":"
                + portTextField.getText() + ":"
                + databaseTextField.getText(), usernameTextField.getText(), passwordField.getText());

            JOptionPane.showMessageDialog(rootPane, "You are connected to " + databaseTextField.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Connection Error");
        }
    }//GEN-LAST:event_setConButtonActionPerformed

    private void updateversionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateversionButtonActionPerformed
         try { 
         String url = "https://drive.google.com/file/d/1E1NcM5LSfdL4kMvOkczCdiprbHQrHdrN/view?usp=sharing";
         java.awt.Desktop.getDesktop().browse(java.net.URI.create(url));
       }
       catch (java.io.IOException e) {
           System.out.println(e.getMessage());
       }
    }//GEN-LAST:event_updateversionButtonActionPerformed

    public Action displayTime() {
        return new AbstractAction("Time") {

            @Override
            public void actionPerformed(ActionEvent e) {
                SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss");
                now = new java.util.Date();
                timeLabel.setText(sdf.format(now));
                SimpleDateFormat s=new SimpleDateFormat("MM-dd-yyyy-EEEE");
                dateLabel.setText(s.format(now));
            }
        };
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        welcome Welcome = new welcome();
        Welcome.setVisible(true);
        SRS s = new SRS();
     
        try {
            for (int i = 0; i <= 100; i++) {
                Thread.sleep(40);
                Welcome.loadingnum.setText(Integer.toString(i) + "%");
                Welcome.loadingbar.setValue(i);
                if (i == 100) {
                    Welcome.setVisible(false);
                    s.setVisible(true);
                }
                if (i >= 25){
                Welcome.loadLabel.setText("Loading Files....");
                }
                if (i >= 50){
                Welcome.loadLabel.setText("Loading Datas....");
                }
                if (i >= 75){
                Welcome.loadLabel.setText("Done Loading Datas....");
                }
                if (i >= 90){
                Welcome.loadLabel.setText("Welcome!!!!");
                }
            }
        } catch (Exception e) {
        }
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SRS().setVisible(false);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JInternalFrame aboutInternalFrame;
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JMenu actionsMenu;
    private javax.swing.JButton addButton;
    private javax.swing.JButton addRecordButton;
    private javax.swing.JInternalFrame addRecordInternalFrame;
    private javax.swing.JMenuItem addRecordMenuItem;
    private javax.swing.JButton cancelAddRecordButton;
    private javax.swing.JButton cancelLoginButton;
    private javax.swing.JMenuItem creditMenuItem;
    private javax.swing.JInternalFrame creditsInternalFrame;
    private javax.swing.JTextField databaseTextField;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JComboBox<String> dayComboBox;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton deleteRecordButton;
    private javax.swing.JButton deleteRecordCloseButton;
    private javax.swing.JInternalFrame deleteRecordInternalFrame;
    private javax.swing.JMenuItem deleteRecordMenuItem;
    private javax.swing.JTable deleteRecordTable;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JTextField firstNameTextField;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JTextField hostTextField;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JDesktopPane jDesktopPane2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTextField lastNameTextField;
    private javax.swing.JButton loginButton;
    private javax.swing.JInternalFrame loginInternalFrame;
    private javax.swing.JMenuItem loginMenuItem;
    private javax.swing.JTextField miTextField;
    private javax.swing.JComboBox<String> monthComboBox;
    private javax.swing.JButton okLoginButton;
    private javax.swing.JButton optionCancelButton;
    private javax.swing.JInternalFrame optionsInternalFrame;
    private javax.swing.JMenuItem optionsMenuItem;
    private javax.swing.JPasswordField password;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JTextField portTextField;
    private javax.swing.JButton printButton;
    private javax.swing.JButton setConButton;
    private javax.swing.JMenu settingsMenu;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JTextField studNoTextField;
    private javax.swing.JLabel timeLabel;
    private javax.swing.JButton updateCancelButton;
    private javax.swing.JComboBox<String> updateDayComboBox;
    private javax.swing.JTextField updateFNameTextField;
    private javax.swing.JTextField updateLNameTextField;
    private javax.swing.JTextField updateMITextField;
    private javax.swing.JComboBox<String> updateMoComboBox;
    private javax.swing.JButton updateRecordButton;
    private javax.swing.JInternalFrame updateRecordInternalFrame;
    private javax.swing.JMenuItem updateRecordMenuItem;
    private javax.swing.JTextField updateSNoTextField;
    private javax.swing.JButton updateSaveButton;
    private javax.swing.JComboBox<String> updateYearComboBox;
    private javax.swing.JButton updateversionButton;
    private javax.swing.JTextField username;
    private javax.swing.JTextField usernameTextField;
    private javax.swing.JButton viewRecordButton;
    private javax.swing.JButton viewRecordCloseButton;
    private javax.swing.JInternalFrame viewRecordInternalFrame;
    private javax.swing.JMenuItem viewRecordMenuItem;
    private javax.swing.JTextField viewRecordSearchTextField;
    private javax.swing.JTable viewRecordTable;
    private javax.swing.JComboBox<String> yearComboBox;
    // End of variables declaration//GEN-END:variables
}
